{"version":3,"file":"static/js/753.16eb1475.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n`;\n\nexport const Ul = styled.ul`\n  list-style-type: none;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  grid-gap: 40px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Li = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 5px;\n  border: 1px solid black;\n  overflow: hidden;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const P = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { StyledLink, Ul, Li, Img, P } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  //Лінк на картинку-заглушку фільму\n  const defaultMovieImg =\n    'https://mishanonoo.com/cdn/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_500x750_crop_center.gif';\n\n  return (\n    <Ul>\n      {movies.map(movie => (\n        <Li key={movie.id}>\n          <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <Img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultMovieImg\n              }\n              alt={movie.title}\n            />\n            <P>{movie.title}</P>\n          </StyledLink>\n        </Li>\n      ))}\n    </Ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 15px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 400px;\n  background-color: #f2f2f2;\n  border-radius: 25px;\n  padding: 5px 10px;\n  margin: 20px 0 20px 0;\n`;\n\nexport const InputStyled = styled.input`\n  flex: 1;\n  border: none;\n  background-color: transparent;\n  outline: none;\n  font-size: 16px;\n`;\n\nexport const ButtonStyled = styled.button`\n  border: none;\n  background-color: #fce38a;\n  /* color: white; */\n  padding: 8px 15px;\n  border-radius: 25px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 500;\n  color: darkgray;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport {\n  FormContainer,\n  Form,\n  ButtonStyled,\n  InputStyled,\n} from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('searchQuery') ?? '';\n\n  //Функція сабміту форми пошуку\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (evt.target.elements.searchQuery.value.trim() === '') {\n      toast.error('You didnt enter anything');\n      return;\n    }\n    setSearchParams({ searchQuery: evt.target.elements.searchQuery.value });\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <FormContainer>\n      <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <InputStyled\n          type=\"text\"\n          placeholder=\"Enter movie name...\"\n          name=\"searchQuery\"\n          defaultValue={search}\n        />\n        <ButtonStyled type=\"submit\">Search</ButtonStyled>\n      </Form>\n    </FormContainer>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from '../../services/apiService';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport toast from 'react-hot-toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParam] = useSearchParams();\n  const query = searchParam.get('searchQuery');\n\n  //Виконуємо запит при кожній зміні query\n  useEffect(() => {\n    if (!query) return;\n    const fetchData = async () => {\n      try {\n        const data = await fetchMovies(query);\n        setMovies([...data.results]);\n        if (!data.results.length) {\n          return toast.error(\n            'Sorry, there are no movies matching your search query. Please try again'\n          );\n        }\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  return (\n    <div>\n      <SearchForm />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","Ul","_templateObject2","Li","_templateObject3","Img","_templateObject4","P","_templateObject5","MoviesList","_ref","movies","location","useLocation","_jsx","children","map","movie","_jsxs","to","concat","id","state","from","src","poster_path","alt","title","FormContainer","Form","InputStyled","ButtonStyled","SearchForm","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","search","get","autoComplete","onSubmit","evt","preventDefault","target","elements","searchQuery","value","trim","currentTarget","reset","toast","type","placeholder","name","defaultValue","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_useState","useState","_useState2","setMovies","query","useEffect","fetchData","_asyncToGenerator","_callee","data","_context","fetchMovies","_toConsumableArray","results","t0","console","log","message","apply","arguments"],"sourceRoot":""}