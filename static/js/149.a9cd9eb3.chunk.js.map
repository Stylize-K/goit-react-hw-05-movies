{"version":3,"file":"static/js/149.a9cd9eb3.chunk.js","mappings":"gRAEaA,EAAa,WAAO,IAAD,EAC9B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,sBAApB,QAAsC,GAOlD,OACE,+BACE,kBAAMC,aAAa,MAAMC,SAPR,SAAAC,GACnBA,EAAIC,iBACJN,EAAgB,CAAEO,YAAaF,EAAIG,OAAOC,SAASF,YAAYG,QAC/DL,EAAIM,cAAcC,OACnB,EAGG,WACE,kBACEC,KAAK,OACLC,YAAY,gBACZC,KAAK,cACLC,aAAcf,KAEhB,mBAAQY,KAAK,SAAb,wBAIP,ECsBD,EA1Ce,WACb,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsBvB,EAAAA,EAAAA,MAChBwB,GADN,eAC0BpB,IAAI,eAgB9B,OAdAqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAYH,GAFjB,OAERI,EAFQ,OAGdP,GAAU,OAAIO,EAAKC,UAHL,gDAKdC,QAAQC,IAAI,QAAS,KAAMC,SALb,qGAAH,qDAUfN,GACD,GAAE,CAACF,KAGF,4BACE,SAACzB,EAAD,KACA,wBACGqB,EAAOa,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAEEC,MAAO,CAAEC,KAAMd,GACfe,GAAE,UAAKH,EAAMI,IAHf,SAKGJ,EAAMK,OAJFL,EAAMI,KAFNJ,EAAMI,GAUlB,QAIR,C","sources":["components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { useSearchParams } from 'react-router-dom';\n\nexport const SearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('searchQuery') ?? '';\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams({ searchQuery: evt.target.elements.searchQuery.value });\n    evt.currentTarget.reset();\n  };\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"enter a query\"\n          name=\"searchQuery\"\n          defaultValue={search}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\n//   const updateQueryString = evt => {\n//     if (evt.target.value === '') {\n//       return setSearchParams({});\n//     }\n//     setSearchParams({ query: evt.target.value });\n//   };\n","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from '../services/apiService';\nimport { SearchForm } from '../components/SearchForm/SearchForm';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParam] = useSearchParams();\n  const query = searchParam.get('searchQuery');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchMovies(query);\n        setMovies([...data.results]);\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  return (\n    <div>\n      <SearchForm />\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link\n                key={movie.id}\n                state={{ from: location }}\n                to={`${movie.id}`}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchForm","useSearchParams","searchParams","setSearchParams","search","get","autoComplete","onSubmit","evt","preventDefault","searchQuery","target","elements","value","currentTarget","reset","type","placeholder","name","defaultValue","useState","movies","setMovies","location","useLocation","query","useEffect","fetchData","fetchMovies","data","results","console","log","message","map","movie","state","from","to","id","title"],"sourceRoot":""}